{
	"data": [
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"title": "Typescript Part I",
				"status": "active",
				"description": "Test your TS Skills.",
				"tags": [
					"js",
					"ts"
				]
			},
			"questions": [
				{
					"title": "TypeScript is an ____________ framework.",
					"options": [
						{
							"value": "Licensed"
						},
						{
							"value": "Open-sourced"
						},
						{
							"value": "Commercial"
						},
						{
							"value": "Both, A and B"
						}
					],
					"correct": "Open-sourced"
				},
				{
					"title": "TypeScript is a typed superset of __________.",
					"options": [
						{
							"value": "C#"
						},
						{
							"value": "Java"
						},
						{
							"value": "JavaScript"
						},
						{
							"value": "ReactJS"
						}
					],
					"correct": "JavaScript"
				},
				{
					"title": "TypeScript file compiled into ________.",
					"options": [
						{
							"value": "JavaScript"
						},
						{
							"value": "VBScript"
						},
						{
							"value": "TypeScript"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "JavaScript"
				},
				{
					"title": "_______ command is used to generate a JavaScript file from a TypeScript file.",
					"options": [
						{
							"value": "npm filename.ts"
						},
						{
							"value": "tsc fileName.ts"
						},
						{
							"value": "tsc -js fileName.ts"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "tsc fileName.ts"
				},
				{
					"title": "Which of the following statement declares a variable in TypeScript?",
					"options": [
						{
							"value": "var myVar = 123;"
						},
						{
							"value": "var myVar:number = 123;"
						},
						{
							"value": "let myVar:number = 123;"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which of the followings are primitive types supported in TypeScript?",
					"options": [
						{
							"value": "number"
						},
						{
							"value": "string"
						},
						{
							"value": "boolean"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which of the following is a valid union type variable?",
					"options": [
						{
							"value": "var emp:[number, string] = [1, \"Steve\"];"
						},
						{
							"value": "var emp:(number|string) = 123;"
						},
						{
							"value": "var emp:string[] = [\"Bill\"]"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "var emp:(number|string) = 123;"
				},
				{
					"title": "Which of the following is a valid tuple?",
					"options": [
						{
							"value": "var employee:[number, string] = [1, \"Bill\"]"
						},
						{
							"value": "var employee:(number|string) = 123;"
						},
						{
							"value": "var employee = [1, \"Bill\"];"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "var employee:[number, string] = [1, \"Bill\"]"
				},
				{
					"title": "Type assertion in TypeScript is achieved using which of the following syntax?",
					"options": [
						{
							"value": "Using <type> syntax"
						},
						{
							"value": "Using as syntax"
						},
						{
							"value": "Both A and B"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "Both A and B"
				},
				{
					"title": "Which of the following is a valid arrow function?",
					"options": [
						{
							"value": "let sum = (x: number, y: number) => x + y;"
						},
						{
							"value": "let sum(): (x: number, y: number):number => x + y;"
						},
						{
							"value": "let sum = (x: number, y: number) => return x + y;"
						},
						{
							"value": "let sum:(x: number, y: number) => x + y;"
						}
					],
					"correct": "let sum = (x: number, y: number) => x + y;"
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"title": "Typescript Part II",
				"status": "active",
				"description": "Test your TS Skills.",
				"tags": [
					"ts"
				]
			},
			"questions": [
				{
					"title": "The rest parameters in a function is used when _______.",
					"options": [
						{
							"value": "The types of parameters is not known"
						},
						{
							"value": "The number of parameters is not known"
						},
						{
							"value": "The function needs to be executed asynchronously"
						},
						{
							"value": "The function is called recursively"
						}
					],
					"correct": "The number of parameters is not known"
				},
				{
					"title": "Which of the following statement is TRUE?",
					"options": [
						{
							"value": "An interface can extend another interface in TypeScript."
						},
						{
							"value": "An interface can extend a class in TypeScript."
						},
						{
							"value": "TypeScript interface does not generate any JavaScript code."
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which of the following are valid data modifiers in TypeScript?",
					"options": [
						{
							"value": "public"
						},
						{
							"value": "private"
						},
						{
							"value": "protected"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which of the following keyword is used to declare a module?",
					"options": [
						{
							"value": "export"
						},
						{
							"value": "namespace"
						},
						{
							"value": "type"
						},
						{
							"value": "declare"
						}
					],
					"correct": "export"
				},
				{
					"title": "Which of the followings is declared a namespace?",
					"options": [
						{
							"value": "namespace test{ }"
						},
						{
							"value": "ns test { }"
						},
						{
							"value": "A & B both"
						},
						{
							"value": "export test(){ }"
						}
					],
					"correct": "namespace test{ }"
				},
				{
					"title": "Which of the following command is used to compile a module?",
					"options": [
						{
							"value": "tsc --module amd mymodule.ts"
						},
						{
							"value": "tsc -m amd mymodule.ts"
						},
						{
							"value": "Both, A and B"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "Both, A and B"
				},
				{
					"title": "Which configuration file is required to compile the whole TypeScript project?",
					"options": [
						{
							"value": "tsconfig.js"
						},
						{
							"value": "tsconfig.json"
						},
						{
							"value": "web.config"
						},
						{
							"value": "app.json"
						}
					],
					"correct": "tsconfig.json"
				},
				{
					"title": "Which of the following statement is TRUE?",
					"options": [
						{
							"value": "TypeScript supports generics."
						},
						{
							"value": "TypeScript supports readonly and static members."
						},
						{
							"value": "TypeScript supports abstract class."
						},
						{
							"value": "All of the above."
						}
					],
					"correct": "All of the above."
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"title": "MongoDB I",
				"status": "active",
				"description": "Test your MongoDB Knowledge.",
				"tags": [
					"db",
					"mongodb"
				]
			},
			"questions": [
				{
					"title": "MongoDB is a _________.",
					"options": [
						{
							"value": "Relational Database"
						},
						{
							"value": "Caching Database"
						},
						{
							"value": "NoSQL Database"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "NoSQL Database"
				},
				{
					"title": "Which of the following commands starts the MongoDB server?",
					"options": [
						{
							"value": "mongo"
						},
						{
							"value": "mongosh"
						},
						{
							"value": "mongoserver"
						},
						{
							"value": "mongod"
						}
					],
					"correct": "mongod"
				},
				{
					"title": "_________ is the command-line client of MongoDB Database?",
					"options": [
						{
							"value": "Mongo Shell"
						},
						{
							"value": "Web Application"
						},
						{
							"value": "Windows Service"
						},
						{
							"value": "Windows Application"
						}
					],
					"correct": "Mongo Shell"
				},
				{
					"title": "Which of the following commands starts Mongo Shell?",
					"options": [
						{
							"value": "mongo"
						},
						{
							"value": "mongosh"
						},
						{
							"value": "mongod"
						},
						{
							"value": "shell"
						}
					],
					"correct": "mongosh"
				},
				{
					"title": "which of the following commands creates a new database?",
					"options": [
						{
							"value": "create"
						},
						{
							"value": "switch"
						},
						{
							"value": "use"
						},
						{
							"value": "new"
						}
					],
					"correct": "use"
				},
				{
					"title": "MongoDB collections are similar to _______ in RDBMS.",
					"options": [
						{
							"value": "Views"
						},
						{
							"value": "Tables"
						},
						{
							"value": "Rows"
						},
						{
							"value": "Columns"
						}
					],
					"correct": "Tables"
				},
				{
					"title": "Which of the following method creates a new collection?",
					"options": [
						{
							"value": "db.useCollection('collection-name')"
						},
						{
							"value": "db.collection('collection-name')"
						},
						{
							"value": "db.createCollection('collection-name')"
						},
						{
							"value": "new db.createCollection('collection-name')"
						}
					],
					"correct": "db.createCollection('collection-name')"
				},
				{
					"title": "MongoDB documents are similar to _______ in RDBMS.",
					"options": [
						{
							"value": "Column"
						},
						{
							"value": "Database"
						},
						{
							"value": "Records"
						},
						{
							"value": "Tables"
						}
					],
					"correct": "Records"
				},
				{
					"title": "MongoDB stores data as ______ document.",
					"options": [
						{
							"value": "JSON"
						},
						{
							"value": "BSON"
						},
						{
							"value": "XML"
						},
						{
							"value": "YML"
						}
					],
					"correct": "BSON"
				},
				{
					"title": "Which of the following methods are used to insert documents in a collection?",
					"options": [
						{
							"value": "insertOne()"
						},
						{
							"value": "insertMany()"
						},
						{
							"value": "insert()"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"title": "MongoDB II",
				"status": "active",
				"description": "Test your MongoDB Knowledge.",
				"tags": [
					"db",
					"mongodb"
				]
			},
			"questions": [
				{
					"title": "Which of the following command is used to import data into collection?",
					"options": [
						{
							"value": "mongoimport"
						},
						{
							"value": "import"
						},
						{
							"value": "insertMany"
						},
						{
							"value": "mongo-import"
						}
					],
					"correct": "mongoimport"
				},
				{
					"title": "which of the following method is used to retrieve data from a collection?",
					"options": [
						{
							"value": "find()"
						},
						{
							"value": "findOne()"
						},
						{
							"value": "aggregate()"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "The find() method returns a _____ object.",
					"options": [
						{
							"value": "List"
						},
						{
							"value": "Cursor"
						},
						{
							"value": "Collection"
						},
						{
							"value": "Record"
						}
					],
					"correct": "Cursor"
				},
				{
					"title": "Which of the following methods is used to sort the data?",
					"options": [
						{
							"value": "db.collection.sort()"
						},
						{
							"value": "db.sort()"
						},
						{
							"value": "db.collection.find().sort()"
						},
						{
							"value": "db.find().sort()"
						}
					],
					"correct": "db.collection.find().sort()"
				},
				{
					"title": "which of the following methods update multiple documents in a collection?",
					"options": [
						{
							"value": "db.collection.update()"
						},
						{
							"value": "db.collection.updateMany()"
						},
						{
							"value": "db.collection.updateOne()"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "db.collection.updateMany()"
				},
				{
					"title": "Which of the following methods deletes a single document in a collection?",
					"options": [
						{
							"value": "db.collection.delete()"
						},
						{
							"value": "db.collection.deleteOne()"
						},
						{
							"value": "db.collection.deleteMany()"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "db.collection.deleteOne()"
				},
				{
					"title": "Which of the following deletes all the documents in a collection?",
					"options": [
						{
							"value": "db.collection.deleteMany({ })"
						},
						{
							"value": "db.collection.clear()"
						},
						{
							"value": "db.collection.deleteAll({ })"
						},
						{
							"value": "db.collection.delete()"
						}
					],
					"correct": "db.collection.deleteMany({ })"
				},
				{
					"title": "The aggregation pipeline is an array of one or more _____ passed in the db.aggregate() method.",
					"options": [
						{
							"value": "Collections"
						},
						{
							"value": "Stages  "
						},
						{
							"value": "Documents"
						},
						{
							"value": "Methods"
						}
					],
					"correct": "Stages  "
				},
				{
					"title": "Which of the following stages is equivalent to the find() method?",
					"options": [
						{
							"value": "$group"
						},
						{
							"value": "$match"
						},
						{
							"value": "$sort"
						},
						{
							"value": "$select"
						}
					],
					"correct": "$match"
				},
				{
					"title": "______is a method for distributing data across multiple machines. ",
					"options": [
						{
							"value": "Replication"
						},
						{
							"value": "Sharding"
						},
						{
							"value": "Load balancing"
						},
						{
							"value": "Transaction"
						}
					],
					"correct": "Sharding"
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"title": "Node.js",
				"tags": [
					"js",
					"node.js"
				],
				"description": "Test your Node.js Knowledge.",
				"status": "active"
			},
			"questions": [
				{
					"title": "Node.js runs on __________",
					"options": [
						{
							"value": "Client"
						},
						{
							"value": "Server"
						},
						{
							"value": "Both, server and client"
						},
						{
							"value": "Browser"
						}
					],
					"correct": "Server"
				},
				{
					"title": "Node.js is ________ by default.",
					"options": [
						{
							"value": "Synchronous"
						},
						{
							"value": "Multi-threaded"
						},
						{
							"value": "Asynchronous"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "Asynchronous"
				},
				{
					"title": "Node.js supports which of the following platform?",
					"options": [
						{
							"value": "Windows"
						},
						{
							"value": "Macintosh"
						},
						{
							"value": "Unix/Linux"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Node.js terminal (REPL) is used for _________.",
					"options": [
						{
							"value": "testing node.js/JavaScript expressions"
						},
						{
							"value": "executing browser’s JavaScript expressions."
						},
						{
							"value": "the preview of node.js application."
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "testing node.js/JavaScript expressions"
				},
				{
					"title": "What is the default scope in Node.js application.",
					"options": [
						{
							"value": "Global"
						},
						{
							"value": "Local"
						},
						{
							"value": "Global Function"
						},
						{
							"value": "Local to object"
						}
					],
					"correct": "Local"
				},
				{
					"title": "Node.js application runs on __________.",
					"options": [
						{
							"value": "Multiple threads"
						},
						{
							"value": "Single thread"
						},
						{
							"value": "Multiple Processes"
						},
						{
							"value": "Single Process"
						}
					],
					"correct": "Single thread"
				},
				{
					"title": "Simple or complex functionality organized in a single or multiple JavaScript files which can be reused throughout your Node.js application is called ________.",
					"options": [
						{
							"value": "Module"
						},
						{
							"value": "Library"
						},
						{
							"value": "Package"
						},
						{
							"value": "Function"
						}
					],
					"correct": "Module"
				},
				{
					"title": "The Node.js modules can be exposed using _________.",
					"options": [
						{
							"value": "module.expose"
						},
						{
							"value": "module"
						},
						{
							"value": "module.exports"
						},
						{
							"value": "all of the above"
						}
					],
					"correct": "module.exports"
				},
				{
					"title": "Third-party packages can be install/update/delete using ________.",
					"options": [
						{
							"value": "Node Package Manager"
						},
						{
							"value": "Node.exe"
						},
						{
							"value": "Module.exports"
						},
						{
							"value": "REPL"
						}
					],
					"correct": "Node Package Manager"
				},
				{
					"title": "Which of the following core module is used to create a web server in Node.js?",
					"options": [
						{
							"value": "fs"
						},
						{
							"value": "url"
						},
						{
							"value": "connect"
						},
						{
							"value": "http"
						}
					],
					"correct": "http"
				},
				{
					"title": "How to import module in Node.js?",
					"options": [
						{
							"value": "Using the require() function."
						},
						{
							"value": "Using module.import"
						},
						{
							"value": "Using the include() function"
						},
						{
							"value": "Using the app.use() function"
						}
					],
					"correct": "Using the require() function."
				},
				{
					"title": "Which of the following is a GUI-based debugging tool for Node.js?",
					"options": [
						{
							"value": "Core node debugger"
						},
						{
							"value": "Console"
						},
						{
							"value": "REPL"
						},
						{
							"value": "Node Inspector"
						}
					],
					"correct": "Node Inspector"
				},
				{
					"title": "Which of the following class is used to create and consume custom events in Node.js?",
					"options": [
						{
							"value": "EventEmitter"
						},
						{
							"value": "Events"
						},
						{
							"value": "NodeEvent"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "EventEmitter"
				},
				{
					"title": "Which of the followings are web application frameworks for Node.js?",
					"options": [
						{
							"value": "Express.js"
						},
						{
							"value": "Geddy"
						},
						{
							"value": "Locomotive"
						},
						{
							"value": "All of the above."
						}
					],
					"correct": "All of the above."
				},
				{
					"title": "Which of the following types of application can be built using Node.js?",
					"options": [
						{
							"value": "Web Application"
						},
						{
							"value": "Chat Application"
						},
						{
							"value": "RESTful Service"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which module is used to serve static resources in Node.js?",
					"options": [
						{
							"value": "node-static"
						},
						{
							"value": "http"
						},
						{
							"value": "node-resource"
						},
						{
							"value": "static"
						}
					],
					"correct": "node-static"
				},
				{
					"title": "Which of the following template engines can be used with Node.js?",
					"options": [
						{
							"value": "Jade"
						},
						{
							"value": "Vash"
						},
						{
							"value": "Handlebars"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which of the following tool automates various tasks of Node.js application?",
					"options": [
						{
							"value": "Express.js"
						},
						{
							"value": "GruntJS"
						},
						{
							"value": "NPM"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "GruntJS"
				},
				{
					"title": "Which of the followings are valid languages for Node.js?",
					"options": [
						{
							"value": "JavaScript"
						},
						{
							"value": "Java"
						},
						{
							"value": "C++"
						},
						{
							"value": "C#"
						}
					],
					"correct": "JavaScript"
				},
				{
					"title": "Node.js application can access which of the following databases?",
					"options": [
						{
							"value": "NoSQL databases"
						},
						{
							"value": "Relational databases"
						},
						{
							"value": "All of the above"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "All of the above"
				}
			]
		},
		{
			"questions": [
				{
					"title": "Question 1",
					"options": [
						{
							"value": "A"
						},
						{
							"value": "B"
						},
						{
							"value": "C"
						},
						{
							"value": "D"
						}
					],
					"correct": "D"
				},
				{
					"title": "Question 2",
					"options": [
						{
							"value": "A"
						},
						{
							"value": "B"
						},
						{
							"value": "C"
						},
						{
							"value": "D"
						}
					],
					"correct": "C"
				},
				{
					"title": "Question 3",
					"options": [
						{
							"value": "A"
						},
						{
							"value": "B"
						},
						{
							"value": "C"
						},
						{
							"value": "D"
						}
					],
					"correct": "D"
				},
				{
					"title": "Question 4",
					"options": [
						{
							"value": "A"
						},
						{
							"value": "B"
						},
						{
							"value": "C"
						},
						{
							"value": "D"
						}
					],
					"correct": "A"
				}
			],
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"description": "Test your Demo Knowledge.",
				"status": "active",
				"tags": [
					"demo"
				],
				"title": "Demo Quiz"
			}
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"title": "Harry Potter",
				"tags": [
					"wizard"
				],
				"description": "Check out how much you still remember of Harry Potter.",
				"status": "active"
			},
			"questions": [
				{
					"title": "What spell did Harry use to kill Lord Voldemort?",
					"options": [
						{
							"value": "Expelliarmus"
						},
						{
							"value": "Expecto Patronum"
						},
						{
							"value": "Avada Kedavra"
						},
						{
							"value": "Accio"
						}
					],
					"correct": "Expelliarmus"
				},
				{
					"title": "At the first meeting of the Duelling Club, Draco Malfoy summoned what animal with the spell 'Serpensortia'?",
					"options": [
						{
							"value": "Frog"
						},
						{
							"value": "Snake"
						},
						{
							"value": "Dragon"
						},
						{
							"value": "Bear"
						}
					],
					"correct": "Snake"
				},
				{
					"title": "Which one of them is not an 'Unforgivable Curses'",
					"options": [
						{
							"value": "Imperius"
						},
						{
							"value": "Confundo"
						},
						{
							"value": "Cruciatus"
						},
						{
							"value": "Avada Kedavra"
						}
					],
					"correct": "Confundo"
				},
				{
					"title": "The 'Felifors' spell turns a cat into a what?",
					"options": [
						{
							"value": "Hat"
						},
						{
							"value": "Bat"
						},
						{
							"value": "Matchbox"
						},
						{
							"value": "Cauldron"
						}
					],
					"correct": "Cauldron"
				},
				{
					"title": "Gilderoy Lockhart tried to use 'Brackium Emendo' to fix Harry's broken bones. What did it actually do to him?",
					"options": [
						{
							"value": "Turned his leg wooden"
						},
						{
							"value": "Removed his bones entirely"
						},
						{
							"value": "Forced him to speak Parseltongue"
						},
						{
							"value": "Gave him an exquisite singing voice"
						}
					],
					"correct": "Removed his bones entirely"
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"description": "These MS SQL Server tests/quizes will help you to check how much you know, or don't know, about MS SQL Server to prepare for the interviews.",
				"status": "active",
				"tags": [
					"db",
					"sql"
				],
				"title": "MS SQL Server I"
			},
			"questions": [
				{
					"title": "What is normalization?",
					"options": [
						{
							"value": "It is a set of database design rules to minimize redundancy."
						},
						{
							"value": "It is a set of rules to normalize database transactions."
						},
						{
							"value": "It is a set of rules to improve database performance."
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "It is a set of database design rules to minimize redundancy."
				},
				{
					"title": "ACID stands for _______.",
					"options": [
						{
							"value": "Atomic, Cryptic, Independent, Durable"
						},
						{
							"value": "Atomicity, Consistency, Isolation, Durability"
						},
						{
							"value": "Automatic, Concurrent, Isolation, Durability"
						},
						{
							"value": "Atomicity, Consistency, Isolation, Decoupled"
						}
					],
					"correct": "Atomicity, Consistency, Isolation, Durability"
				},
				{
					"title": "What is Primary Key?",
					"options": [
						{
							"value": "Primary keys are unique names of a table."
						},
						{
							"value": "Primary keys are integer ids in a table rows."
						},
						{
							"value": "Primary keys are unique identifiers for each row in a table."
						},
						{
							"value": "None of the above."
						}
					],
					"correct": "Primary keys are unique identifiers for each row in a table."
				},
				{
					"title": "A table can have more than one combination of columns that uniquely identify the row in a table; each combination is called_________.",
					"options": [
						{
							"value": "Foreign Key"
						},
						{
							"value": "Primary key"
						},
						{
							"value": "Composite Key"
						},
						{
							"value": "Candidate Key"
						}
					],
					"correct": "Candidate Key"
				},
				{
					"title": "A column that automatically generates numeric values is called __________.",
					"options": [
						{
							"value": "Unique column"
						},
						{
							"value": "Integer column"
						},
						{
							"value": "Identity column"
						},
						{
							"value": "Candidate column"
						}
					],
					"correct": "Identity column"
				},
				{
					"title": "What is the correct order of query operators in a SQL query?",
					"options": [
						{
							"value": "SELECT -> FROM -> OUTER -> WHERE"
						},
						{
							"value": "FROM -> OUTER -> WHERE -> ON"
						},
						{
							"value": "SELECT -> FROM -> WHERE -> OUTER"
						},
						{
							"value": "FROM -> OUTER -> GROUP BY -> WHERE"
						}
					],
					"correct": "SELECT -> FROM -> OUTER -> WHERE"
				},
				{
					"title": "What are indexes?",
					"options": [
						{
							"value": "Index speed up the data retrieval"
						},
						{
							"value": "Index stores large number of integer values"
						},
						{
							"value": "Index minimize the data redundancy"
						},
						{
							"value": "None of the above."
						}
					],
					"correct": "Index speed up the data retrieval"
				},
				{
					"title": "How many types of indexes in SQL server?",
					"options": [
						{
							"value": "Integer and string"
						},
						{
							"value": "Unique and non-unique"
						},
						{
							"value": "Clustered and Nonclustered"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "Clustered and Nonclustered"
				},
				{
					"title": "RAID stands for ________.",
					"options": [
						{
							"value": "Reduce Array of Independent Disks"
						},
						{
							"value": "Redundant Array of Independent Disks"
						},
						{
							"value": "Redundant Automatic Individual Durable"
						},
						{
							"value": "Redundancy Accelerator Independent Disks"
						}
					],
					"correct": "Redundant Array of Independent Disks"
				},
				{
					"title": "What is the difference between Primary key and Unique key?",
					"options": [
						{
							"value": "Primary key doesn’t allow null value whereas unique key allows multiple null values"
						},
						{
							"value": "Primary key allows one null value whereas unique key doesn’t allow null value."
						},
						{
							"value": "Primary key doesn’t allow null value whereas unique key allows one null value."
						},
						{
							"value": "Primary key allows one null value whereas unique key allows multiple null values."
						}
					],
					"correct": "Primary key doesn’t allow null value whereas unique key allows one null value."
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"description": "These MS SQL Server tests/quizes will help you to check how much you know, or don't know, about MS SQL Server to prepare for the interviews.",
				"status": "active",
				"tags": [
					"db",
					"sql"
				],
				"title": "MS SQL Server II"
			},
			"questions": [
				{
					"title": "OLTP stands for _________.",
					"options": [
						{
							"value": "Online Transaction Processing"
						},
						{
							"value": "Offline Transaction Processing"
						},
						{
							"value": "Ontime Transaction Program"
						},
						{
							"value": "Online Timebound Processing"
						}
					],
					"correct": "Online Transaction Processing"
				},
				{
					"title": "Which of the followings are the types of locks in SQL Server?",
					"options": [
						{
							"value": "Shared locks"
						},
						{
							"value": "Exclusive locks"
						},
						{
							"value": "Schema locks"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "What are the authentication modes in SQL Server?",
					"options": [
						{
							"value": "Windows mode"
						},
						{
							"value": "Mixed mode"
						},
						{
							"value": "All of the above"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "What is a trigger?",
					"options": [
						{
							"value": "A trigger is a SQL procedure that initiates an action when an event (INSERT, DELETE or UPDATE) occurs."
						},
						{
							"value": "A trigger is an event that can be raised from Stored Procedures."
						},
						{
							"value": "A trigger is a SQL procedure that performs some tasks on accessing db tables."
						},
						{
							"value": "A trigger is a procedure which executes when an error occurred."
						}
					],
					"correct": "A trigger is a SQL procedure that initiates an action when an event (INSERT, DELETE or UPDATE) occurs."
				},
				{
					"title": "What are the different types of trigger",
					"options": [
						{
							"value": "DDL and DCL"
						},
						{
							"value": "DDL and DUL"
						},
						{
							"value": "DML and DTL"
						},
						{
							"value": "DML and DDL"
						}
					],
					"correct": "DML and DDL"
				},
				{
					"title": "What are the different types of temporary tables in SQL server?",
					"options": [
						{
							"value": "Indexed and non-index temporary tables"
						},
						{
							"value": "Global and local temporary tables"
						},
						{
							"value": "Unique and shared temporary tables"
						},
						{
							"value": "Small and large temporary tables"
						}
					],
					"correct": "Global and local temporary tables"
				},
				{
					"title": "Which of the following is not a valid data type in SQL server",
					"options": [
						{
							"value": "xml"
						},
						{
							"value": "nvarchar"
						},
						{
							"value": "money"
						},
						{
							"value": "blob"
						}
					],
					"correct": "blob"
				},
				{
					"title": "Which of the followings are valid Transaction levels in SQL Server?",
					"options": [
						{
							"value": "READ COMMITTED"
						},
						{
							"value": "READ UNCOMMITTED"
						},
						{
							"value": "REPEATABLE READ"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which of the following keyword is used to raise an error in stored procedure?",
					"options": [
						{
							"value": "THROW"
						},
						{
							"value": "THROWERROR"
						},
						{
							"value": "RAISERROR"
						},
						{
							"value": "ERROR"
						}
					],
					"correct": "RAISERROR"
				},
				{
					"title": "What are the different types of replication available in SQL server?",
					"options": [
						{
							"value": "Snapshot Replication"
						},
						{
							"value": "Transactional Replication"
						},
						{
							"value": "Merge Replication"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"description": "Checkout you how much you know about jQuery.",
				"status": "active",
				"tags": [
					"js",
					"jquery"
				],
				"title": "jQuery I"
			},
			"questions": [
				{
					"title": "jQuery is a _______ side library.",
					"options": [
						{
							"value": "Client"
						},
						{
							"value": "Server"
						},
						{
							"value": "CDN"
						},
						{
							"value": "web"
						}
					],
					"correct": "Client"
				},
				{
					"title": "jQuery is a ________ library.",
					"options": [
						{
							"value": "Java"
						},
						{
							"value": "JavaScript"
						},
						{
							"value": "Script"
						},
						{
							"value": "VBScript"
						}
					],
					"correct": "JavaScript"
				},
				{
					"title": "jQuery library add which global function?",
					"options": [
						{
							"value": "Window"
						},
						{
							"value": "jQuery"
						},
						{
							"value": "document"
						},
						{
							"value": "ready"
						}
					],
					"correct": "jQuery"
				},
				{
					"title": "Which of the following is shorthand for jQuery function?",
					"options": [
						{
							"value": "&"
						},
						{
							"value": "jq"
						},
						{
							"value": "$"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "$"
				},
				{
					"title": "jQuery library version 1.x is for ________ browser",
					"options": [
						{
							"value": "IE 9+"
						},
						{
							"value": "All modern browser"
						},
						{
							"value": "IE 6.0 to 8.0"
						},
						{
							"value": "All older browser"
						}
					],
					"correct": "IE 6.0 to 8.0"
				},
				{
					"title": "Which of the following statement determines document is loaded?",
					"options": [
						{
							"value": "$(document).ready(function(){ });"
						},
						{
							"value": "$(document).loaded(function(){ });"
						},
						{
							"value": "jQuery.ready(function(){ });"
						},
						{
							"value": "jQuery.isLoaded(document);"
						}
					],
					"correct": "$(document).ready(function(){ });"
				},
				{
					"title": "______ selects DOM element by id.",
					"options": [
						{
							"value": "$(['id'])"
						},
						{
							"value": "$('id')"
						},
						{
							"value": "$('#id')"
						},
						{
							"value": "$('*id')"
						}
					],
					"correct": "$('#id')"
				},
				{
					"title": "$(\"div[class *='myCls']\") selects which element(s)?",
					"options": [
						{
							"value": "All div elements whose class attribute value is equal to myCls"
						},
						{
							"value": "All div elements whose class attribute value starts with myCls"
						},
						{
							"value": "All div elements whose class attribute value ends with myCls"
						},
						{
							"value": "All div elements whose class attribute value contains myCls"
						}
					],
					"correct": "All div elements whose class attribute value contains myCls"
				},
				{
					"title": "$(this) selects_________.",
					"options": [
						{
							"value": "Window object"
						},
						{
							"value": "Current html element"
						},
						{
							"value": "Current calling object"
						},
						{
							"value": "DOM"
						}
					],
					"correct": "Current html element"
				},
				{
					"title": "Which of the following jQuery method add/remove CSS classes from the selected elements?",
					"options": [
						{
							"value": "addClass()"
						},
						{
							"value": "removeClass()"
						},
						{
							"value": "toggleClass()"
						},
						{
							"value": "css()"
						}
					],
					"correct": "toggleClass()"
				}
			]
		},
		{
			"quiz": {
				"author": "user_24ehPy7NZDb4SZ2I18MCflkXuT7",
				"description": "Checkout you how much you know about jQuery.",
				"status": "active",
				"tags": [
					"js",
					"jquery"
				],
				"title": "jQuery II"
			},
			"questions": [
				{
					"title": "Which of the following function automatically attaches new DOM elements to an event handler?",
					"options": [
						{
							"value": "live"
						},
						{
							"value": "delegate"
						},
						{
							"value": "on"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which jQuery method is used to deal with name conflicts?",
					"options": [
						{
							"value": "Conflict()"
						},
						{
							"value": "noConflict()"
						},
						{
							"value": "nameConflict()"
						},
						{
							"value": "None of the above"
						}
					],
					"correct": "noConflict()"
				},
				{
					"title": "$(\"div p.myCls\") selector selects _______.",
					"options": [
						{
							"value": "All div and p elements with class=myCls"
						},
						{
							"value": "All the p elements with class=myCls inside div elements."
						},
						{
							"value": "All div elements which is parent of p elements with class=myCls"
						},
						{
							"value": "All div and p elements with class=myCls"
						}
					],
					"correct": "All the p elements with class=myCls inside div elements."
				},
				{
					"title": "Which of the following method is used to request data from server?",
					"options": [
						{
							"value": "$.get()"
						},
						{
							"value": "$.post()"
						},
						{
							"value": "$.load()"
						},
						{
							"value": "All of the above"
						}
					],
					"correct": "All of the above"
				},
				{
					"title": "Which of the following method is used to hide the element?",
					"options": [
						{
							"value": "hide()"
						},
						{
							"value": "display('none')"
						},
						{
							"value": "noShow()"
						},
						{
							"value": "hidden()"
						}
					],
					"correct": "hide()"
				},
				{
					"title": "Which method returns all sibling elements of the selected element.",
					"options": [
						{
							"value": "next()"
						},
						{
							"value": "siblings()"
						},
						{
							"value": "prev()"
						},
						{
							"value": "prevUntil()"
						}
					],
					"correct": "siblings()"
				},
				{
					"title": "$(\"div p\").first(); returns ______.",
					"options": [
						{
							"value": "Returns first <p> elements inside the first <div> elements"
						},
						{
							"value": "Returns first <p> elements from all <div> elements"
						},
						{
							"value": "Returns first <div> elements which has <p> element"
						},
						{
							"value": "Returns all <div> and <p> elements appears first in the html."
						}
					],
					"correct": "Returns first <p> elements inside the first <div> elements"
				},
				{
					"title": "Which method allows you to filter elements based on specified criteria?",
					"options": [
						{
							"value": "search()"
						},
						{
							"value": "find()"
						},
						{
							"value": "filter()"
						},
						{
							"value": "get()"
						}
					],
					"correct": "filter()"
				},
				{
					"title": "Which of the following statement is TRUE?",
					"options": [
						{
							"value": "jQuery library handles cross-browser issues automatically."
						},
						{
							"value": "jQuery library handles provides methods to handle cross-browser issues."
						},
						{
							"value": "jQuery does not handle cross-browser issues."
						},
						{
							"value": "jQuery is supported only in modern browser."
						}
					],
					"correct": "jQuery library handles cross-browser issues automatically."
				},
				{
					"title": "jQuery guarantees to pass _______ in all event handler.",
					"options": [
						{
							"value": "Context object"
						},
						{
							"value": "event object"
						},
						{
							"value": "this"
						},
						{
							"value": "exception"
						}
					],
					"correct": "event object"
				}
			]
		}
	]
}