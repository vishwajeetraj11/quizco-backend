"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toSPKIDer = exports.decodeBase64 = void 0;
const decodeBase64 = (base64) => Buffer.from(base64, 'base64').toString('binary');
exports.decodeBase64 = decodeBase64;
// toSPKIDer converts a PEM encoded Public Key to DER encoded
function toSPKIDer(pem) {
    const pemHeader = "-----BEGIN PUBLIC KEY-----";
    const pemFooter = "-----END PUBLIC KEY-----";
    const pemContents = pem.substring(pemHeader.length, pem.length - pemFooter.length);
    const binaryDerString = (0, exports.decodeBase64)(pemContents);
    return str2ab(binaryDerString);
}
exports.toSPKIDer = toSPKIDer;
// https://stackoverflow.com/a/11058858
function str2ab(input) {
    const buf = new ArrayBuffer(input.length);
    const bufView = new Uint8Array(buf);
    for (let i = 0, strLen = input.length; i < strLen; i++) {
        bufView[i] = input.charCodeAt(i);
    }
    return buf;
}
//# sourceMappingURL=crypto.js.map