{"version":3,"file":"ErrorHandler.js","sourceRoot":"","sources":["../../src/utils/ErrorHandler.ts"],"names":[],"mappings":";;AAAA,qCAA4E;AAE5E,SAAwB,WAAW,CAAC,KAAU;;IAC5C,MAAM,UAAU,GAAG,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,0CAAE,UAAU,KAAI,GAAG,CAAC;IACtD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;IACpC,MAAM,IAAI,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,0CAAE,IAAI,CAAC;IACnC,IAAI,IAAI,CAAC;IAET,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;QACvB,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,SAA+B,EAAE,EAAE;YACjE,OAAO,yBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;KACJ;SAAM;QACL,IAAI,GAAG,IAAI,CAAC;KACb;IAED,MAAM,IAAI,kBAAS,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACjD,CAAC;AAfD,8BAeC","sourcesContent":["import { ClerkServerError, ClerkServerErrorJSON,HttpError } from './Errors';\n\nexport default function handleError(error: any): never {\n  const statusCode = error?.response?.statusCode || 500;\n  const message = error.message || '';\n  const body = error?.response?.body;\n  let data;\n\n  if (body && body.errors) {\n    data = (body.errors || []).map((errorJSON: ClerkServerErrorJSON) => {\n      return ClerkServerError.fromJSON(errorJSON);\n    });\n  } else {\n    data = body;\n  }\n\n  throw new HttpError(statusCode, message, data);\n}\n"]}