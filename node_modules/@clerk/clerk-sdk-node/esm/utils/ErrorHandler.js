import { ClerkServerError, HttpError } from './Errors';
export default function handleError(error) {
    var _a, _b;
    const statusCode = ((_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.statusCode) || 500;
    const message = error.message || '';
    const body = (_b = error === null || error === void 0 ? void 0 : error.response) === null || _b === void 0 ? void 0 : _b.body;
    let data;
    if (body && body.errors) {
        data = (body.errors || []).map((errorJSON) => {
            return ClerkServerError.fromJSON(errorJSON);
        });
    }
    else {
        data = body;
    }
    throw new HttpError(statusCode, message, data);
}
//# sourceMappingURL=ErrorHandler.js.map