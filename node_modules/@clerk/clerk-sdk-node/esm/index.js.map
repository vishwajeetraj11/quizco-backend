{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAM,YAAY,CAAC;AAE/B,MAAM,iBAAiB,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;AAC9C,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;AACpE,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,CAAC;AAC1C,MAAM,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC;AACxC,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;AAClD,MAAM,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;AAC5C,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;AAClD,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC;AAEtC,6EAA6E;AAC7E,eAAe,iBAAiB,CAAC;AAEjC,yBAAyB;AACzB,OAAO,EACL,oBAAoB,EACpB,OAAO,EACP,MAAM,EACN,WAAW,EACX,QAAQ,EACR,WAAW,EACX,KAAK,GACN,CAAC;AAEF,mBAAmB;AACnB,OAAO,EAEL,mBAAmB,EACnB,MAAM,EACN,KAAK,EACL,YAAY,EACZ,eAAe,EACf,kBAAkB,EAClB,UAAU,EACV,WAAW,EAEX,UAAU,EACV,IAAI,EACJ,YAAY,GACb,MAAM,YAAY,CAAC;AAEpB,8BAA8B;AAC9B,MAAM,uBAAuB,GAC3B,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC/D,MAAM,0BAA0B,GAC9B,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAClE,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC1E,MAAM,cAAc,GAAG,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAChF,OAAO,EACL,uBAAuB,EACvB,0BAA0B,EAC1B,WAAW,EACX,cAAc,GACf,CAAC;AAUF,gBAAgB;AAChB,OAAO,EACL,SAAS,EACT,gBAAgB,GAEjB,MAAM,gBAAgB,CAAC;AAExB,gBAAgB;AAChB,OAAO,EAAE,OAAO,IAAI,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAEnD,oDAAoD;AACpD,uDAAuD;AAEvD,MAAM,UAAU,cAAc,CAAC,KAAa;IAC1C,KAAK,CAAC,WAAW,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,KAAa;IAChD,KAAK,CAAC,WAAW,EAAE,CAAC,YAAY,GAAG,KAAK,CAAC;AAC3C,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,KAAa;IAC9C,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,KAAmC;IACrE,KAAK,CAAC,WAAW,EAAE,CAAC,WAAW,GAAG,KAAK,CAAC;AAC1C,CAAC","sourcesContent":["import { OptionsOfUnknownResponseBody } from 'got';\n\nimport Clerk from './instance';\n\nconst singletonInstance = Clerk.getInstance();\nconst allowlistIdentifiers = singletonInstance.allowlistIdentifiers;\nconst clients = singletonInstance.clients;\nconst emails = singletonInstance.emails;\nconst invitations = singletonInstance.invitations;\nconst sessions = singletonInstance.sessions;\nconst smsMessages = singletonInstance.smsMessages;\nconst users = singletonInstance.users;\n\n// Export a default singleton instance that should suffice for most use cases\nexport default singletonInstance;\n\n// Export sub-api objects\nexport {\n  allowlistIdentifiers,\n  clients,\n  emails,\n  invitations,\n  sessions,\n  smsMessages,\n  users,\n};\n\n// Export resources\nexport {\n  Nullable,\n  AllowlistIdentifier,\n  Client,\n  Email,\n  EmailAddress,\n  ExternalAccount,\n  IdentificationLink,\n  Invitation,\n  PhoneNumber,\n  Session,\n  SMSMessage,\n  User,\n  Verification,\n} from './instance';\n\n// Export middleware functions\nconst ClerkExpressWithSession =\n  singletonInstance.expressWithSession.bind(singletonInstance);\nconst ClerkExpressRequireSession =\n  singletonInstance.expressRequireSession.bind(singletonInstance);\nconst withSession = singletonInstance.withSession.bind(singletonInstance);\nconst requireSession = singletonInstance.requireSession.bind(singletonInstance);\nexport {\n  ClerkExpressWithSession,\n  ClerkExpressRequireSession,\n  withSession,\n  requireSession,\n};\n\n// Export wrapper types for Next.js requests\nexport {\n  WithSessionProp,\n  RequireSessionProp,\n  WithSessionClaimsProp,\n  RequireSessionClaimsProp,\n} from './instance';\n\n// Export Errors\nexport {\n  HttpError,\n  ClerkServerError,\n  ClerkServerErrorJSON,\n} from './utils/Errors';\n\n// Export Logger\nexport { default as Logger } from './utils/Logger';\n\n// Export setters for the default singleton instance\n// Useful if you only have access to a sub-api instance\n\nexport function setClerkApiKey(value: string) {\n  Clerk.getInstance().apiKey = value;\n}\n\nexport function setClerkServerApiUrl(value: string) {\n  Clerk.getInstance().serverApiUrl = value;\n}\n\nexport function setClerkApiVersion(value: string) {\n  Clerk.getInstance().apiVersion = value;\n}\n\nexport function setClerkHttpOptions(value: OptionsOfUnknownResponseBody) {\n  Clerk.getInstance().httpOptions = value;\n}\n"]}