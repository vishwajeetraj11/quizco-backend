"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkClaims = exports.isExpired = void 0;
const Errors_1 = require("../api/utils/Errors");
const DEFAULT_ADDITIONAL_CLOCK_SKEW = 0;
function isExpired(payload, additionalClockSkew = DEFAULT_ADDITIONAL_CLOCK_SKEW) {
    const now = Date.now() / 1000;
    if (payload.exp && now > payload.exp + additionalClockSkew) {
        throw new Errors_1.JWTExpiredError(`Token is expired`);
    }
    if (payload.nbf && now < payload.nbf - additionalClockSkew) {
        throw new Error(`Token is not active yet`);
    }
}
exports.isExpired = isExpired;
function checkClaims(claims, authorizedParties) {
    if (!claims.iss || !claims.iss.startsWith('https://clerk')) {
        throw new Error(`Issuer is invalid: ${claims.iss}`);
    }
    if (claims.azp && authorizedParties && authorizedParties.length > 0) {
        if (!authorizedParties.includes(claims.azp)) {
            throw new Error(`Authorized party is invalid: ${claims.azp}`);
        }
    }
}
exports.checkClaims = checkClaims;
