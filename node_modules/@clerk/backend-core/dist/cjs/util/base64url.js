"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
function parse(input) {
    const base64UrlEncoding = {
        chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',
        bits: 6,
        codes: {},
    };
    for (let i = 0; i < base64UrlEncoding.chars.length; ++i) {
        base64UrlEncoding.codes[base64UrlEncoding.chars[i]] = i;
    }
    let end = input.length;
    while (input[end - 1] === '=') {
        --end;
    }
    const out = new Uint8Array(((end * base64UrlEncoding.bits) / 8) | 0);
    let bits = 0;
    let buffer = 0;
    let written = 0;
    for (let i = 0; i < end; ++i) {
        const value = base64UrlEncoding.codes[input[i]];
        if (value === undefined) {
            throw new Error('Invalid character ' + input[i]);
        }
        buffer = (buffer << base64UrlEncoding.bits) | value;
        bits += base64UrlEncoding.bits;
        if (bits >= 8) {
            bits -= 8;
            out[written++] = 0xff & (buffer >> bits);
        }
    }
    if (bits >= base64UrlEncoding.bits || 0xff & (buffer << (8 - bits))) {
        throw new Error('Unexpected end of data');
    }
    return out;
}
exports.parse = parse;
