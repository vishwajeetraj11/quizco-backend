"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const resources_1 = require("../../api/resources");
const Deserializer_1 = (0, tslib_1.__importDefault)(require("../../api/utils/Deserializer"));
const allowlistIdentifierJSON = {
    object: 'allowlist_identifier',
    id: 'alid_wxyz',
    identifier: 'test@example.com',
    created_at: 1612378465,
    updated_at: 1612378465,
};
const clientJSON = {
    object: 'client',
    id: 'client_wxyz',
    session_ids: ['sess_abcd', 'sess_efgh'],
    sign_in_attempt_id: null,
    sign_up_attempt_id: null,
    last_active_session_id: 'sess_efgh',
    created_at: 1612378465,
    updated_at: 1612378465,
};
const emailJSON = {
    object: 'email',
    id: 'ema_dvorak',
    from_email_name: 'sales',
    to_email_address: 'accounting@cyberdyne.com',
    email_address_id: 'idn_snafu',
    subject: 'Business trip reimbursement',
    body: 'Please find attached the invoices for expenses made during the visit to NY.',
    status: 'queued',
};
const invitationJSON = {
    object: 'invitation',
    id: 'inv_randomid',
    email_address: 'invitation@example.com',
    created_at: 1612378465,
    updated_at: 1612378465,
};
const sessionJSON = {
    object: 'session',
    id: 'sess_efgh',
    client_id: 'client_wxyz',
    user_id: 'user_rock',
    status: 'active',
    last_active_at: 1612378465,
    expire_at: 1612378465,
    abandon_at: 1612378465,
};
const smsMessageJSON = {
    object: 'sms_message',
    id: 'sms_qwerty',
    from_phone_number: '+12345551001',
    to_phone_number: '+12345551001',
    phone_number_id: 'idn_foobar',
    message: "Don't forget to bring a towel",
    status: 'queued',
};
test('deserializes an AllowlistIdentifier object', () => {
    const allowlistIdentifier = (0, Deserializer_1.default)(allowlistIdentifierJSON);
    expect(allowlistIdentifier).toBeInstanceOf(resources_1.AllowlistIdentifier);
});
test('deserializes an array of AllowlistIdentifier objects', () => {
    const allowlistIdentifiers = (0, Deserializer_1.default)([allowlistIdentifierJSON]);
    expect(allowlistIdentifiers).toBeInstanceOf(Array);
    expect(allowlistIdentifiers.length).toBe(1);
    expect(allowlistIdentifiers[0]).toBeInstanceOf(resources_1.AllowlistIdentifier);
});
test('deserializes a Client object', () => {
    const client = (0, Deserializer_1.default)(clientJSON);
    expect(client).toBeInstanceOf(resources_1.Client);
});
test('deserializes an array of Client objects', () => {
    const clients = (0, Deserializer_1.default)([clientJSON]);
    expect(clients).toBeInstanceOf(Array);
    expect(clients.length).toBe(1);
    expect(clients[0]).toBeInstanceOf(resources_1.Client);
});
test('deserializes an Email object', () => {
    const email = (0, Deserializer_1.default)(emailJSON);
    expect(email).toBeInstanceOf(resources_1.Email);
});
test('deserializes an Invitation object', () => {
    const invitation = (0, Deserializer_1.default)(invitationJSON);
    expect(invitation).toBeInstanceOf(resources_1.Invitation);
});
test('deserializes an array of Invitation objects', () => {
    const invitations = (0, Deserializer_1.default)([invitationJSON]);
    expect(invitations).toBeInstanceOf(Array);
    expect(invitations.length).toBe(1);
    expect(invitations[0]).toBeInstanceOf(resources_1.Invitation);
});
test('deserializes a Session object', () => {
    const session = (0, Deserializer_1.default)(sessionJSON);
    expect(session).toBeInstanceOf(resources_1.Session);
});
test('deserializes an array of Session objects', () => {
    const sessions = (0, Deserializer_1.default)([sessionJSON]);
    expect(sessions).toBeInstanceOf(Array);
    expect(sessions.length).toBe(1);
    expect(sessions[0]).toBeInstanceOf(resources_1.Session);
});
test('deserializes an SmsMessage object', () => {
    const client = (0, Deserializer_1.default)(smsMessageJSON);
    expect(client).toBeInstanceOf(resources_1.SMSMessage);
});
