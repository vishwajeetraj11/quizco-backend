import { AllowlistIdentifierApi, ClientApi, EmailApi, InvitationApi, SessionApi, SMSMessageApi, UserApi } from './collection';
import { ClerkFetcher } from './utils/RestClient';
declare type ClerkBackendAPIProps = {
    apiKey?: string;
    serverApiUrl?: string;
    apiVersion?: string;
    fetcher: ClerkFetcher;
    libName: string;
    libVersion: string;
    packageRepo: string;
};
export declare class ClerkBackendAPI {
    private _restClient;
    static _instance: ClerkBackendAPI;
    private _allowlistIdentifierApi?;
    private _clientApi?;
    private _emailApi?;
    private _invitationApi?;
    private _sessionApi?;
    private _smsMessageApi?;
    private _userApi?;
    constructor({ apiKey, serverApiUrl, apiVersion, fetcher, libName, libVersion, packageRepo, }: ClerkBackendAPIProps);
    fetchInterstitial<T>(): Promise<T>;
    set apiKey(value: string);
    set serverApiUrl(value: string);
    set apiVersion(value: string);
    get allowlistIdentifiers(): AllowlistIdentifierApi;
    get clients(): ClientApi;
    get emails(): EmailApi;
    get invitations(): InvitationApi;
    get sessions(): SessionApi;
    get smsMessages(): SMSMessageApi;
    get users(): UserApi;
}
export {};
//# sourceMappingURL=ClerkBackendAPI.d.ts.map