import associationDefaults from '../utils/Associations';
import { Association } from './Enums';
import { IdentificationLink } from './IdentificationLink';
import { Verification } from './Verification';
export class PhoneNumber {
    constructor(data = {}) {
        Object.assign(this, PhoneNumber.defaults, data);
    }
    static fromJSON(data) {
        return new PhoneNumber({
            id: data.id,
            phoneNumber: data.phone_number,
            reservedForSecondFactor: data.reserved_for_second_factor,
            verification: Verification.fromJSON(data.verification),
            linkedTo: (data.linked_to || []).map((link) => {
                return IdentificationLink.fromJSON(link);
            }),
        });
    }
}
PhoneNumber.attributes = ['id', 'phoneNumber', 'reservedForSecondFactor'];
PhoneNumber.associations = {
    verification: Association.HasOne,
    linkedTo: Association.HasMany,
};
PhoneNumber.defaults = associationDefaults(PhoneNumber.associations);
